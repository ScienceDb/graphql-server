mutation{
  addAnimal(animal_id:"1", animal_name:"Lily", category:"Dog", age:3, weight:6.5, health:true,
  birthday:"2017-12-03T10:15:30Z", personality:["energetic","enthusiastic"]){
    animal_name
    category
    age
    weight
    health
    birthday
    personality
  }
}
{
  animals(search: {operator: in, field: personality, 
    value: "energetic", valueType:Array}, pagination: {limit: 20, offset: 0}) {

    animal_id
    animal_name
    category
    age
    weight
    health
    birthday
    personality
  }
}

mutation{
  deleteAnimal(animal_id:"1")
}


{
  farms(search: {operator: eq, field: farm_name, 
    value: "farm1"}, pagination: {limit: 1, offset: 0}) {
    farm_id
    farm_name
    owner
  }
}

mutation{ 
  addFarm(farm_id:3, farm_name:"farm3", owner: "Alex"){
    farm_id
    farm_name
    owner
  }
}
https://zendro-dev.github.io/api_graphql.html#extra-mutation-fields-to-update-or-create-associations
mutation{
  updateAnimal(animal_id: "1" addFarm: "1"){
    animal_name
    farm{
      farm_name
      owner
    }
  }
}

{
  readOneAnimal(animal_id: "1"){
    animal_name
    farm{
      farm_name
      owner
    }
	}
}


// null in animal, so I add farm later. after that ,still has some problem
{
  farms(search: {field: owner, value: "Gary", operator: eq}, pagination: {limit: 10}){
    owner
    countFilteredAnimals(search: {field:category, value:"Dog", operator: eq})
    animalsFilter(pagination:{offset: 0, limit: 10}){
      animal_name
    }
    animalsConnection(search: {field:category, value:"Dog", operator: eq},
      pagination: {first:10})
  	{
        edges{
          node{
            animal_id
          }
        }
    }
  }
}
{
  locations(search: {field: locationId, value: "1", operator: eq}, pagination: {limit: 10}){
    locationId
    countFilteredAccessions(search: {field:accession_id, value:"1", operator: eq})
    accessionsFilter(pagination:{offset: 0, limit: 10}){
      accession_id
    }
  }
}

//no id in animal. solved use update rather than add
mutation{
  updateFarm( farm_id: 1 addAnimals: [1, 4] ){
    farm_name
    animalsFilter(pagination:{limit:10}){
      animal_name
    }
  }
}

# {
#   locations(search: {field: locationId, value: "1", operator: eq}, pagination: {limit: 10}){
#     locationId
#     countFilteredAccessions(search: {field:accession_id, value:"1", operator: eq})
#     accessionsFilter(pagination:{offset: 0, limit: 10}){
#       accession_id
#     }
#   }
# }

  mutation{
    addFood(food_id:"1", food_name:"pork", addAnimals:[2,5]){
      food_id
      animal_ids
    }
  }
  
    mutation{
    addFood(food_id:"2", food_name:"fish", addAnimals:[2,5]){
      food_id
      animal_ids
    }
  }
  
    mutation{
    addFood(food_id:"3", food_name:"rice", addAnimals:[2,5]){
      food_id
      animal_ids
      countFilteredAnimals(search: {field:category, value:"Dog", operator: eq})
      animalsFilter(pagination:{offset: 0, limit: 10}){
        animal_name
      }
      animalsConnection(search: {field:category, value:"Dog", operator: eq},
        pagination: {first:10})
        {
            edges{
              node{
                animal_id
              }
            }
        }
      }
  }


{
  readOneAnimal(animal_id: "2"){
    animal_name
    food_ids
    countFilteredFood(search: {field:food_name, value:"pork", operator: eq})
		foodFilter(search:{field:food_name, value:"pork", operator: eq},
    pagination:{offset: 0, limit: 10}){
      food_name
    }
    foodConnection(pagination:{first: 10}){
      edges{
        node{
          food_name
        }
      }
    }
  }
}


/////////////////////////////one to one
mutation{
	updateTracker(tracker_id:1, location:"garden", addUnique_animal:3){
    tracker_id
    animal_id
  }
}
{
  animals(search: {field: animal_id, operator: eq, value: "3"}, pagination: {limit: 10}) {
    animal_id
    unique_tracker {
      tracker_id
    }
  }
}

introduce conflict
mutation{
	addTracker(tracker_id:2, location:"living room", addUnique_animal:3){
    tracker_id
    animal_id
  }
}

mutation{
	updateTracker(tracker_id:1,removeUnique_animal:3){
    tracker_id
    animal_id
  }
}